#!/bin/bash

API_ENDPOINT="${API_ENDPOINT:-http://127.0.0.1:8080}"
RUSK_VERSION="1.0.0"
CONTENT_TYPE="application/json"
INSTALLER_VERSION="v0.5.7"

show_help() {
    echo "Dusk Query Tool"
    echo "Usage: $0 [command]"
    echo ""
    echo "Commands:"
    echo "  block-height    Query the current block height"
    echo "  peers           Query the current number of connected peers"
    echo "  info            Query for general network information"
    echo "  version         Query the installer version and check for latest version"
    echo ""
    echo "Options:"
    echo "  -h, --help      Display this help message and exit"
    echo ""
    echo "Example:"
    echo "  $0 block-height    # Queries the current block height"
}

query_block_height() {
    curl -s --location --request POST "$API_ENDPOINT/on/graphql/query" \
    --header "Rusk-Version: $RUSK_VERSION" \
    --header "Content-Type: $CONTENT_TYPE" \
    --data-raw 'query { block(height: -1) { header { height } } }' | jq '.block.header.height'
}

query_connected_peers() {
    peers_count=$(curl -s --location --request POST "$API_ENDPOINT/on/network/peers" \
    --header "Rusk-Version: $RUSK_VERSION" \
    --header "Content-Type: $CONTENT_TYPE" \
    --data-raw '100' | jq '. | length')

    if [ "$peers_count" -gt 99 ]; then
        echo "+99"
    else
        echo "$peers_count"
    fi
}

query_info() {
    curl -s --location --request POST "$API_ENDPOINT/on/node/info" \
    --header "Rusk-Version: $RUSK_VERSION" \
    --header "Content-Type: $CONTENT_TYPE" | jq '.'
}

version_gt() {
    # Compares two versions $1 and $2
    # Returns 0 if $1 is greater than $2, otherwise returns 1
    test "$(printf '%s\n' "$@" | sort -V | head -n 1)" != "$1"
}

query_installer_version() {
    # Fetch the latest release version from GitHub
    local latest_version=$(curl -s "https://api.github.com/repos/dusk-network/node-installer/releases/latest" | jq -r '.tag_name')

    # Compare versions
    if [ "${latest_version#v}" = "${INSTALLER_VERSION#v}" ]; then
        echo "You are using the latest installer version: $INSTALLER_VERSION."
    elif version_gt "${latest_version#v}" "${INSTALLER_VERSION#v}"; then
        echo "A new installer version is available: $latest_version."
        echo "You are currently on version: $INSTALLER_VERSION."
        echo "To upgrade to the latest version, visit: https://docs.dusk.network/operator/guides/upgrade-node/"
    else
        echo "You are using a newer installer version ($INSTALLER_VERSION) than the latest public release ($latest_version)."
    fi
}

# Case switch in case we introduce more shortcuts
case "$1" in
    block-height)
        query_block_height
        ;;
    peers)
        query_connected_peers
        ;;
    info)
        query_info
        ;;
    version)
        query_installer_version
        ;;
    -h|--help)
        show_help
        ;;
    *)
        show_help
        ;;
esac
